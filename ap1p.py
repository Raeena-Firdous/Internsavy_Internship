{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "227d13b5",
   "metadata": {},
   "outputs": [],
   "source": [
    "import streamlit as st\n",
    "import pandas as pd\n",
    "\n",
    "\n",
    "from xgboost import XGBClassifier\n",
    "\n",
    "st.title(\"Case Count Predictor\")\n",
    "classifier = XGBClassifier()\n",
    "classifier.load_model('model.json')\n",
    "\n",
    "@st.cache\n",
    "def prediction(Age,DailyRate,DistanceFromHome,BusinessTravel,Education,EnvironmentSatisfaction,HourlyRate,JobInvolvement,JobLevel,MonthlyIncome,NumCompaniesWorked,PerformanceRating,StockOptionLevel,TrainingTimesLastYear,YearsAtCompany,YearsSinceLastPromotion,WorkLifeBalance,TotalWorkingYears,RelationshipSatisfaction,PercentSalaryHikeJobSatisfaction, Department, EducationField, Gender,\n",
    "       JobRole, MaritalStatus, OverTime):\n",
    "\n",
    "    if  BusinessTravel == 'Travel_Frequently':\n",
    "        BusinessTravel_Travel_Frequently = 1\n",
    "        BusinessTravel_Travel_Rarely = 0\n",
    "    elif  BusinessTravel == 'Travel_Rarely':\n",
    "        BusinessTravel_Travel_Frequently = 0\n",
    "        BusinessTravel_Travel_Rarely = 1\n",
    "    else:\n",
    "        BusinessTravel_Travel_Frequently = 0\n",
    "        BusinessTravel_Travel_Rarely = 0\n",
    "\n",
    "    if Department == \"Sales\":\n",
    "        dhr= 0\n",
    "        drd=0\n",
    "        ds=1\n",
    "        dsw=0\n",
    "        dsupp=0\n",
    "    elif Department == \"Support\":\n",
    "        dhr= 0\n",
    "        drd=0\n",
    "        ds=0\n",
    "        dsw=0\n",
    "        dsupp=1\n",
    "    elif Department == \"Software\":\n",
    "        dhr= 0\n",
    "        drd=0\n",
    "        ds=1\n",
    "        dsw=0\n",
    "        dsupp=0\n",
    "    elif Department == \"Research & Development\":\n",
    "        dhr= 0\n",
    "        drd=1\n",
    "        ds=0\n",
    "        dsw=0\n",
    "        dsupp=0\n",
    "    elif Department == \"Human Resources\":\n",
    "        dhr= 1\n",
    "        drd=0\n",
    "        ds=0\n",
    "        dsw=0\n",
    "        dsupp=0\n",
    "    else:\n",
    "        dhr= 0\n",
    "        drd=0\n",
    "        ds=0\n",
    "        dsw=0\n",
    "        dsupp=0\n",
    "\n",
    "\n",
    "\n",
    "    if EducationField ==\"Other\":\n",
    "        lf=0\n",
    "        td=0\n",
    "        oth=1\n",
    "        mar=0\n",
    "        medical=0\n",
    "    elif EducationField ==\"Marketing\":\n",
    "        lf=0\n",
    "        td=0\n",
    "        oth=0\n",
    "        mar=1\n",
    "        medical=0\n",
    "    elif EducationField ==\"Medical\":\n",
    "        lf=0\n",
    "        td=0\n",
    "        oth=0\n",
    "        mar=0\n",
    "        medical=1\n",
    "    elif EducationField ==\"Technical Degree\":\n",
    "        lf=0\n",
    "        td=1\n",
    "        oth=0\n",
    "        mar=0\n",
    "        medical=0\n",
    "    else:\n",
    "        lf=0\n",
    "        td=0\n",
    "        oth=0\n",
    "        mar=0\n",
    "        medical=0\n",
    "\n",
    "    if Gender ==\"Male\" :\n",
    "        male=1\n",
    "    else:\n",
    "        male=0\n",
    "\n",
    "\n",
    "    if JobRole == \"Sales Executive\":\n",
    "        se =1\n",
    "        rs=0\n",
    "        jhr=0\n",
    "        manager=0\n",
    "        hcr=0\n",
    "        rd=0\n",
    "        sr=0\n",
    "        lt=0\n",
    "        md=0\n",
    "    elif JobRole == \"Research Scientist\":\n",
    "        se =0\n",
    "        rs=1\n",
    "        jhr=0\n",
    "        manager=0\n",
    "        hcr=0\n",
    "        rd=0\n",
    "        sr=0\n",
    "        lt=0\n",
    "        md=0\n",
    "    elif JobRole == \"Human Resources\":\n",
    "        se =0\n",
    "        rs=0\n",
    "        jhr=1\n",
    "        manager=0\n",
    "        hcr=0\n",
    "        rd=0\n",
    "        sr=0\n",
    "        lt=0\n",
    "        md=0\n",
    "    elif JobRole == \"Manager\":\n",
    "        se =0\n",
    "        rs=0\n",
    "        jhr=0\n",
    "        manager=1\n",
    "        hcr=0\n",
    "        rd=0\n",
    "        sr=0\n",
    "        lt=0\n",
    "        md=0\n",
    "    elif JobRole == \"Healthcare Representative\":\n",
    "        se =0\n",
    "        rs=0\n",
    "        jhr=0\n",
    "        manager=0\n",
    "        hcr=1\n",
    "        rd=0\n",
    "        sr=0\n",
    "        lt=0\n",
    "        md=0\n",
    "    elif JobRole == \"Research Director\":\n",
    "        se =0\n",
    "        rs=0\n",
    "        jhr=0\n",
    "        manager=0\n",
    "        hcr=0\n",
    "        rd=1\n",
    "        sr=0\n",
    "        lt=0\n",
    "        md=0\n",
    "    elif JobRole == \"Laboratory Technician\":\n",
    "        se =0\n",
    "        rs=0\n",
    "        jhr=0\n",
    "        manager=0\n",
    "        hcr=0\n",
    "        rd=0\n",
    "        sr=0\n",
    "        lt=1\n",
    "        md=0\n",
    "    elif JobRole == \"Manufacturing Director\":\n",
    "        se =0\n",
    "        rs=0\n",
    "        jhr=0\n",
    "        manager=0\n",
    "        hcr=0\n",
    "        rd=0\n",
    "        sr=0\n",
    "        lt=0\n",
    "        md=1\n",
    "    else:\n",
    "        se =0\n",
    "        rs=0\n",
    "        jhr=0\n",
    "        manager=0\n",
    "        hcr=0\n",
    "        rd=0\n",
    "        sr=0\n",
    "        lt=0\n",
    "        md=0\n",
    "\n",
    "\n",
    "\n",
    "        \n",
    "    if MaritalStatus == \"Single\":\n",
    "         MaritalStatus_Single=1\n",
    "         MaritalStatus_Married=0 \n",
    "    elif  MaritalStatus == \"Married\": \n",
    "        MaritalStatus_Single=0\n",
    "        MaritalStatus_Married=1\n",
    "    else:\n",
    "        MaritalStatus_Single=0\n",
    "        MaritalStatus_Married=0\n",
    "\n",
    "\n",
    "    if OverTime == \"Yes\":\n",
    "        OverTime_Yes=1\n",
    "    else:\n",
    "        OverTime_Yes=0\n",
    "\n",
    "\n",
    "    prediction = classifier.predict(Age,DailyRate,DistanceFromHome,BusinessTravel,Education,EnvironmentSatisfaction,HourlyRate,JobInvolvement,JobLevel,MonthlyIncome,NumCompaniesWorked,PerformanceRating,StockOptionLevel,TrainingTimesLastYear,YearsAtCompany,YearsSinceLastPromotion,WorkLifeBalance,TotalWorkingYears,RelationshipSatisfaction,PercentSalaryHikeJobSatisfaction, Department, EducationField, Gender,\n",
    "       JobRole, MaritalStatus, OverTime)\n",
    "     \n",
    "    \n",
    "    return prediction \n",
    "def main():       \n",
    "    Age= st.text_input(\"Enter Age\")\n",
    "    DailyRate= st.text_input(\"Enter DailyRate\")\n",
    "    DistanceFromHome= st.text_input(\"Enter DistanceFromHome\")\n",
    "    Education= st.text_input(\"Enter Education\")\n",
    "    EnvironmentSatisfaction= st.text_input(\"Enter EnvironmentSatisfaction\")\n",
    "    HourlyRate= st.text_input(\"Enter HourlyRate\")\n",
    "    JobInvolvement= st.text_input(\"Enter JobInvolvement\")\n",
    "    JobLevel= st.text_input(\"Enter JobLevel\")\n",
    "    JobSatisfaction= st.text_input(\"Enter JobSatisfaction\")\n",
    "    MonthlyIncome= st.text_input(\"Enter MonthlyIncome\")\n",
    "    NumCompaniesWorked= st.text_input(\"Enter NumCompaniesWorked\")\n",
    "    PercentSalaryHike= st.text_input(\"Enter PercentSalaryHike\")\n",
    "    PerformanceRating= st.text_input(\"Enter PerformanceRating\")\n",
    "    RelationshipSatisfaction= st.text_input(\"Enter RelationshipSatisfaction\")\n",
    "    StockOptionLevel= st.text_input(\"Enter StockOptionLevel\")\n",
    "    TotalWorkingYears= st.text_input(\"Enter TotalWorkingYears\")\n",
    "    TrainingTimesLastYear= st.text_input(\"Enter TrainingTimesLastYear\")\n",
    "    WorkLifeBalance= st.text_input(\"Enter WorkLifeBalance\")\n",
    "    YearsAtCompany= st.text_input(\"Enter YearsAtCompany\")\n",
    "    YearsSinceLastPromotion= st.text_input(\"Enter YearsSinceLastPromotion\")\n",
    "    BusinessTravel= st.selectbox(\"Select type of business travel\", ('Travel_Frequently','Travel_Rarely',\"Non-Travel\")) \n",
    "    Department=st.selectbox(\"Select type of department\", ('Sales', 'Support','Software','Research & Development','Human Resources','Hardware')) \n",
    "    EducationField=st.selectbox(\"Select type of education field\", ('Other','Marketing','Medical','Technical Degree','Human Resources')) \n",
    "    Gender=st.selectbox(\"Select type of education field\", ('Male','Female'))\n",
    "    JobRole=st.selectbox(\"Select type of education field\", ('Sales Executive', \"Research Scientist\", \"Human Resources\", \"Thursday\",\n",
    "                                              \"Manager\",\"Healthcare Representative\",\"Research Director\",'Laboratory Technician','Manufacturing Director','Developer'))\n",
    "    MaritalStatus=st.selectbox(\"Select type of education field\", ('Single', 'Married',\"Divorce\"))\n",
    "    OverTime=st.selectbox(\"Select type of education field\", ('Yes','No'))\n",
    "    \n",
    "    if st.button(\"Predict\"): \n",
    "        result = prediction(Age,  DailyRate, DistanceFromHome, Education,\n",
    "       EnvironmentSatisfaction, HourlyRate, JobInvolvement, JobLevel,\n",
    "       JobSatisfaction, MonthlyIncome, NumCompaniesWorked,\n",
    "       PercentSalaryHike, PerformanceRating, RelationshipSatisfaction,\n",
    "       StockOptionLevel, TotalWorkingYears, TrainingTimesLastYear,\n",
    "       WorkLifeBalance, YearsAtCompany, YearsSinceLastPromotion) \n",
    "        st.success('{}'.format(result))\n",
    "        \n",
    "if __name__ == \"_main_\":\n",
    "    main()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c693a6dc",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
